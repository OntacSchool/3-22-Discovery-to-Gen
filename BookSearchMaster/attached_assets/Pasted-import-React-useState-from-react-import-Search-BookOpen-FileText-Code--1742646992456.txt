import React, { useState } from 'react';
import { 
  Search, 
  BookOpen, 
  FileText, 
  Code, 
  Award, 
  Globe, 
  ArrowRight, 
  Upload, 
  Edit, 
  CheckSquare, 
  Cpu, 
  Database, 
  Brain, 
  BarChart2, 
  Terminal, 
  MessageSquare, 
  Layers, 
  Zap, 
  Server, 
  RefreshCw, 
  GitBranch, 
  Bookmark, 
  Users 
} from 'lucide-react';

function EliceCreatorAI() {
  const [activeTab, setActiveTab] = useState('discovery');
  const [generatingContent, setGeneratingContent] = useState(false);
  const [showResults, setShowResults] = useState(false);
  const [selectedCurriculum, setSelectedCurriculum] = useState(null);
  const [contentType, setContentType] = useState(null);
  const [modificationMode, setModificationMode] = useState(null);
  const [searchQuery, setSearchQuery] = useState('');
  const [ragState, setRagState] = useState('idle');
  const [agentThoughts, setAgentThoughts] = useState([]);
  const [retrievedDocuments, setRetrievedDocuments] = useState([]);
  const [showAdvancedFeatures, setShowAdvancedFeatures] = useState(false);
  const [activeSection, setActiveSection] = useState('main');
  
  // Simulate the RAG process
  const handleDiscover = () => {
    if (!searchQuery.trim()) return;
    
    setGeneratingContent(true);
    setRagState('processing');
    setAgentThoughts([]);
    setRetrievedDocuments([]);
    
    // Simulate document retrieval
    setTimeout(() => {
      setRagState('retrieving');
      setAgentThoughts(prev => [...prev, 'Analyzing query intent: educational content discovery for "' + searchQuery + '"']);
      
      // Simulate vector search
      setTimeout(() => {
        setAgentThoughts(prev => [...prev, 'Performing vector similarity search across educational content database']);
        setRetrievedDocuments([
          { 
            title: 'Python Programming Fundamentals', 
            type: 'Course', 
            similarity: 0.92,
            snippet: 'Introduction to Python programming language, covering basic syntax, data types, and control structures.'
          },
          { 
            title: 'Data Science with Python', 
            type: 'Learning Path', 
            similarity: 0.87,
            snippet: 'Comprehensive path covering Python libraries for data analysis including pandas, numpy, and scikit-learn.'
          },
          { 
            title: 'Machine Learning Basics', 
            type: 'Module', 
            similarity: 0.82,
            snippet: 'Fundamental concepts in machine learning with Python implementations of common algorithms.'
          },
        ]);
        
        // Simulate curriculum generation
        setTimeout(() => {
          setAgentThoughts(prev => [...prev, 'Generating curriculum options based on retrieved content and user learning objectives']);
          setRagState('generating');
          
          // Simulate completion
          setTimeout(() => {
            setAgentThoughts(prev => [...prev, 'Finalizing curriculum structure with appropriate learning materials, exercises, and assessments']);
            setGeneratingContent(false);
            setShowResults(true);
            setRagState('complete');
          }, 1500);
        }, 1500);
      }, 1500);
    }, 1500);
  };
  
  const handleCurriculumSelect = (id) => {
    setSelectedCurriculum(id);
  };
  
  const handleContentTypeSelect = (type) => {
    setContentType(type);
  };
  
  const handleModificationSelect = (mode) => {
    setModificationMode(mode);
  };
  
  const resetWorkflow = () => {
    setShowResults(false);
    setSelectedCurriculum(null);
    setContentType(null);
    setModificationMode(null);
    setRagState('idle');
    setAgentThoughts([]);
    setRetrievedDocuments([]);
  };

  // Render secondary navigation for advanced features
  const renderSecondaryNav = () => {
    if (!showAdvancedFeatures) return null;
    
    return (
      <div className="bg-white rounded-lg shadow-sm p-2 mb-4">
        <div className="flex space-x-2">
          <button 
            className={activeSection === 'main' ? 'bg-purple-100 text-purple-700 px-3 py-1 text-sm rounded-md' : 'bg-gray-100 text-gray-600 px-3 py-1 text-sm rounded-md'}
            onClick={() => setActiveSection('main')}
          >
            Discovery
          </button>
          <button 
            className={activeSection === 'architecture' ? 'bg-purple-100 text-purple-700 px-3 py-1 text-sm rounded-md' : 'bg-gray-100 text-gray-600 px-3 py-1 text-sm rounded-md'}
            onClick={() => setActiveSection('architecture')}
          >
            RAG Architecture
          </button>
          <button 
            className={activeSection === 'agent' ? 'bg-purple-100 text-purple-700 px-3 py-1 text-sm rounded-md' : 'bg-gray-100 text-gray-600 px-3 py-1 text-sm rounded-md'}
            onClick={() => setActiveSection('agent')}
          >
            AI Agent
          </button>
          <button 
            className={activeSection === 'knowledge' ? 'bg-purple-100 text-purple-700 px-3 py-1 text-sm rounded-md' : 'bg-gray-100 text-gray-600 px-3 py-1 text-sm rounded-md'}
            onClick={() => setActiveSection('knowledge')}
          >
            Knowledge Base
          </button>
        </div>
      </div>
    );
  };
  
  // Render main discovery content
  const renderDiscoveryContent = () => {
    return (
      <div className="md:col-span-2">
        <div className="bg-white rounded-lg shadow-md p-4 mb-4">
          <h2 className="text-lg font-semibold mb-3 text-purple-700 flex items-center">
            Content Discovery 
            <ArrowRight className="h-4 w-4 mx-2" /> 
            Curriculum, Pathways
          </h2>
          
          {!showResults ? (
            <>
              {/* Search and Prompt Bar */}
              <div className="flex items-center border rounded-md p-2 mb-4">
                <input
                  type="text"
                  placeholder="Enter your content discovery prompt here..."
                  className="flex-1 outline-none text-sm"
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                />
                <div className="flex space-x-2 ml-2">
                  <button 
                    className="bg-purple-600 hover:bg-purple-700 text-white text-sm py-1 px-3 rounded"
                    onClick={handleDiscover}
                  >
                    Discover
                  </button>
                  <button className="bg-gray-100 hover:bg-gray-200 text-gray-800 text-sm py-1 px-3 rounded">
                    Generate
                  </button>
                </div>
              </div>
              
              {/* Trending and Navigation */}
              <div className="mb-4">
                <div className="text-sm font-medium mb-2">Trending Hashtag</div>
                <div className="flex flex-wrap gap-2">
                  {['Python Basics', 'Data Science', 'Web Development', 'Machine Learning'].map((keyword) => (
                    <div key={keyword} className="bg-gray-100 rounded-md px-3 py-1 text-sm">
                      <span className="text-gray-700">{keyword}</span>
                    </div>
                  ))}
                </div>
              </div>
              
              <div className="flex justify-center mt-6">
                <button
                  className="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-md flex items-center"
                  onClick={handleDiscover}
                >
                  <Search className="h-4 w-4 mr-2" />
                  Discover Content
                </button>
              </div>
            </>
          ) : generatingContent ? (
            <div className="flex flex-col py-6">
              <div className="mb-4 flex items-center justify-center">
                <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-purple-700 mr-3"></div>
                <div className="text-lg font-medium text-purple-700">
                  {ragState === 'processing' && 'Processing Query...'}
                  {ragState === 'retrieving' && 'Retrieving Content...'}
                  {ragState === 'generating' && 'Generating Curriculum...'}
                </div>
              </div>
              
              <div className="border rounded-lg p-3 bg-gray-50 mb-4">
                <h3 className="text-sm font-medium mb-2 flex items-center">
                  <Brain className="h-4 w-4 mr-1 text-purple-600" />
                  AI Agent Thoughts
                </h3>
                <div className="space-y-2">
                  {agentThoughts.map((thought, index) => (
                    <div key={index} className="text-sm text-gray-700 flex items-start">
                      <span className="text-purple-500 mr-2">â€¢</span>
                      <span>{thought}</span>
                    </div>
                  ))}
                </div>
              </div>
              
              {retrievedDocuments.length > 0 && (
                <div className="border rounded-lg p-3 bg-gray-50">
                  <h3 className="text-sm font-medium mb-2 flex items-center">
                    <Database className="h-4 w-4 mr-1 text-purple-600" />
                    Retrieved Documents
                  </h3>
                  <div className="space-y-2">
                    {retrievedDocuments.map((doc, index) => (
                      <div key={index} className="border rounded p-2 bg-white">
                        <div className="flex justify-between items-center mb-1">
                          <span className="font-medium text-sm">{doc.title}</span>
                          <span className="text-xs bg-purple-100 text-purple-800 rounded px-1.5 py-0.5">
                            {Math.round(doc.similarity * 100)}% Match
                          </span>
                        </div>
                        <div className="text-xs text-gray-500 mb-1">{doc.type}</div>
                        <p className="text-xs text-gray-700">{doc.snippet}</p>
                      </div>
                    ))}
                  </div>
                </div>
              )}
            </div>
          ) : (
            <div>
              <h3 className="text-lg font-medium text-center mb-4">Recommended Curriculum</h3>
              
              <div className="grid grid-cols-2 gap-4 mb-6">
                {[1, 2, 3, 4].map((id) => (
                  <div
                    key={id}
                    className={`border rounded-lg p-3 cursor-pointer hover:border-purple-400 transition-colors ${selectedCurriculum === id ? 'border-purple-500 bg-purple-50' : ''}`}
                    onClick={() => handleCurriculumSelect(id)}
                  >
                    <div className="font-medium mb-2">Curriculum {id}</div>
                    <div className="flex space-x-2">
                      <div className="border rounded px-2 py-1 text-xs">LN</div>
                      <div className="border rounded px-2 py-1 text-xs">Qz</div>
                      <div className="border rounded px-2 py-1 text-xs">Ex</div>
                      <div className="border rounded px-2 py-1 text-xs">Pr</div>
                    </div>
                  </div>
                ))}
              </div>
              
              {selectedCurriculum && (
                <div className="flex justify-center">
                  <button
                    className="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-md flex items-center"
                    onClick={() => setActiveTab('generation')}
                  >
                    Proceed to Content Generation
                  </button>
                </div>
              )}
            </div>
          )}
        </div>
      </div>
    );
  };
  
  // Render RAG information panel
  const renderRagInfoPanel = () => {
    if (!showAdvancedFeatures && !showResults) return null;
    
    return (
      <div className="md:col-span-1">
        <div className="bg-white rounded-lg shadow-md p-4 mb-4">
          <h3 className="text-sm font-medium mb-3 flex items-center">
            <Database className="h-4 w-4 mr-1 text-purple-600" />
            RAG Information
          </h3>
          
          <div className="space-y-3">
            <div>
              <div className="text-xs font-medium text-gray-500 mb-1">Vector Database</div>
              <div className="flex items-center">
                <div className={`h-2 w-2 rounded-full ${ragState !== 'idle' ? 'bg-green-500' : 'bg-gray-300'} mr-2`}></div>
                <span className="text-sm">Pinecone</span>
              </div>
            </div>
            
            <div>
              <div className="text-xs font-medium text-gray-500 mb-1">Indexed Documents</div>
              <span className="text-sm">12,458 Educational Resources</span>
            </div>
            
            <div>
              <div className="text-xs font-medium text-gray-500 mb-1">Model</div>
              <span className="text-sm">GPT-4 with Pedagogical Alignment</span>
            </div>
            
            <div>
              <div className="text-xs font-medium text-gray-500 mb-1">Content Types</div>
              <div className="flex flex-wrap gap-1 mt-1">
                <span className="text-xs bg-blue-100 text-blue-800 rounded px-1.5 py-0.5">Courses</span>
                <span className="text-xs bg-green-100 text-green-800 rounded px-1.5 py-0.5">Lectures</span>
                <span className="text-xs bg-yellow-100 text-yellow-800 rounded px-1.5 py-0.5">Exercises</span>
                <span className="text-xs bg-red-100 text-red-800 rounded px-1.5 py-0.5">Assessments</span>
              </div>
            </div>
          </div>
        </div>
        
        {showAdvancedFeatures && (
          <div className="bg-white rounded-lg shadow-md p-4">
            <h3 className="text-sm font-medium mb-3 flex items-center">
              <Zap className="h-4 w-4 mr-1 text-purple-600" />
              System Status
            </h3>
            
            <div className="space-y-3">
              <div className="flex justify-between items-center">
                <span className="text-sm">API Latency</span>
                <span className="text-xs font-medium text-green-600">126ms</span>
              </div>
              <div className="flex justify-between items-center">
                <span className="text-sm">Content Freshness</span>
                <span className="text-xs font-medium text-green-600">Updated 2h ago</span>
              </div>
              <div className="flex justify-between items-center">
                <span className="text-sm">Agent Version</span>
                <span className="text-xs font-medium">v2.4.1</span>
              </div>
              <div className="flex justify-between items-center">
                <span className="text-sm">Active Users</span>
                <span className="text-xs font-medium">253</span>
              </div>
            </div>
          </div>
        )}
      </div>
    );
  };
  
  // Main render
  return (
    <div className="flex flex-col min-h-screen bg-gray-50">
      {/* Header */}
      <header className="bg-white border-b border-gray-200 px-4 py-3">
        <div className="flex items-center justify-between">
          <div className="flex items-center">
            <Layers className="h-6 w-6 text-purple-700 mr-2" />
            <h1 className="text-xl font-bold text-purple-700">Elice Creator AI</h1>
            <span className="ml-2 bg-purple-100 text-purple-800 text-xs font-medium px-2 py-0.5 rounded">RAG-Powered</span>
          </div>
          <div className="flex items-center space-x-3">
            <button 
              className={showAdvancedFeatures ? 'bg-purple-100 text-purple-700 text-sm px-3 py-1 rounded' : 'bg-gray-100 text-gray-600 text-sm px-3 py-1 rounded'}
              onClick={() => setShowAdvancedFeatures(!showAdvancedFeatures)}
            >
              {showAdvancedFeatures ? 'Hide Advanced' : 'Show Advanced'}
            </button>
            <div className="flex items-center bg-purple-100 rounded-md px-2 py-1">
              <Globe className="h-4 w-4 text-purple-700 mr-1" />
              <span className="text-sm">Singapore Only</span>
            </div>
          </div>
        </div>
      </header>
      
      {/* Tabs */}
      <div className="flex border-b border-gray-200 bg-white">
        <button
          className={activeTab === 'discovery' ? 'text-purple-700 border-b-2 border-purple-700 px-4 py-2 text-sm font-medium' : 'text-gray-500 px-4 py-2 text-sm font-medium'}
          onClick={() => {
            setActiveTab('discovery');
            resetWorkflow();
            setActiveSection('main');
          }}
        >
          Content Discovery
        </button>
        <button
          className={activeTab === 'generation' ? 'text-purple-700 border-b-2 border-purple-700 px-4 py-2 text-sm font-medium' : 'text-gray-500 px-4 py-2 text-sm font-medium'}
          onClick={() => {
            setActiveTab('generation');
            resetWorkflow();
            setActiveSection('main');
          }}
        >
          Content Generation
        </button>
        {showAdvancedFeatures && (
          <>
            <button
              className={activeTab === 'analytics' ? 'text-purple-700 border-b-2 border-purple-700 px-4 py-2 text-sm font-medium' : 'text-gray-500 px-4 py-2 text-sm font-medium'}
              onClick={() => {
                setActiveTab('analytics');
                setActiveSection('main');
              }}
            >
              Analytics
            </button>
            <button
              className={activeTab === 'admin' ? 'text-purple-700 border-b-2 border-purple-700 px-4 py-2 text-sm font-medium' : 'text-gray-500 px-4 py-2 text-sm font-medium'}
              onClick={() => {
                setActiveTab('admin');
                setActiveSection('main');
              }}
            >
              Admin
            </button>
          </>
        )}
      </div>
      
      {/* Main Content */}
      <main className="flex-1 p-4">
        {activeTab === 'discovery' && (
          <div className="max-w-6xl mx-auto">
            {/* Secondary Navigation */}
            {renderSecondaryNav()}
            
            {activeSection === 'main' && (
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                {renderDiscoveryContent()}
                {renderRagInfoPanel()}
              </div>
            )}
            
            {showAdvancedFeatures && activeSection === 'architecture' && (
              <div className="bg-white rounded-lg shadow-md p-4">
                <h2 className="text-lg font-semibold mb-4 text-purple-700">RAG Architecture</h2>
                
                <div className="border rounded-lg p-4 bg-gray-50 mb-4">
                  <h3 className="text-md font-medium mb-3">System Architecture</h3>
                  
                  <div className="flex flex-col items-center">
                    {/* Architecture Diagram */}
                    <div className="w-full max-w-3xl">
                      <div className="flex flex-col items-center">
                        <div className="bg-blue-100 border border-blue-300 rounded-lg p-3 w-64 text-center mb-4">
                          <div className="font-medium text-blue-800 mb-1">Content Sources</div>
                          <div className="text-xs text-blue-600">Files, APIs, Web, Existing Materials</div>
                        </div>
                        
                        <div className="h-6 w-0.5 bg-gray-300"></div>
                        
                        <div className="bg-purple-100 border border-purple-300 rounded-lg p-3 w-64 text-center mb-4">
                          <div className="font-medium text-purple-800 mb-1">Processing Pipeline</div>
                          <div className="text-xs text-purple-600">Text extraction, Chunking, Metadata</div>
                        </div>
                        
                        <div className="h-6 w-0.5 bg-gray-300"></div>
                        
                        <div className="bg-green-100 border border-green-300 rounded-lg p-3 w-64 text-center mb-4">
                          <div className="font-medium text-green-800 mb-1">Vector Database</div>
                          <div className="text-xs text-green-600">Content embeddings, Metadata</div>
                        </div>
                        
                        <div className="h-6 w-0.5 bg-gray-300"></div>
                        
                        <div className="bg-yellow-100 border border-yellow-300 rounded-lg p-3 w-64 text-center mb-4">
                          <div className="font-medium text-yellow-800 mb-1">AI Agent Orchestration</div>
                          <div className="text-xs text-yellow-600">Query understanding, Retrieval planning</div>
                        </div>
                        
                        <div className="h-6 w-0.5 bg-gray-300"></div>
                        
                        <div className="bg-red-100 border border-red-300 rounded-lg p-3 w-64 text-center">
                          <div className="font-medium text-red-800 mb-1">Content Generation</div>
                          <div className="text-xs text-red-600">Curriculum, Notes, Quizzes, Exercises</div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            )}
            
            {showAdvancedFeatures && activeSection === 'agent' && (
              <div className="bg-white rounded-lg shadow-md p-4">
                <h2 className="text-lg font-semibold mb-4 text-purple-700">AI Agent Capabilities</h2>
                
                <div className="border rounded-lg p-4 bg-gray-50 mb-4">
                  <h3 className="text-md font-medium mb-3 flex items-center">
                    <Brain className="h-5 w-5 mr-2 text-purple-600" />
                    Educational Reasoning Layer
                  </h3>
                  
                  <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div className="border bg-white rounded-lg p-3">
                      <h4 className="font-medium text-sm mb-2">Pedagogical Frameworks</h4>
                      <ul className="text-xs text-gray-600 space-y-1 list-disc pl-4">
                        <li>Bloom's Taxonomy Integration</li>
                        <li>Constructivist Learning Model</li>
                        <li>Mastery Learning Approach</li>
                        <li>Problem-Based Learning</li>
                      </ul>
                    </div>
                    
                    <div className="border bg-white rounded-lg p-3">
                      <h4 className="font-medium text-sm mb-2">Learning Progression</h4>
                      <ul className="text-xs text-gray-600 space-y-1 list-disc pl-4">
                        <li>Prerequisite Mapping</li>
                        <li>Concept Dependency Graphs</li>
                        <li>Difficulty Calibration</li>
                        <li>Knowledge Gap Analysis</li>
                      </ul>
                    </div>
                    
                    <div className="border bg-white rounded-lg p-3">
                      <h4 className="font-medium text-sm mb-2">Personalization</h4>
                      <ul className="text-xs text-gray-600 space-y-1 list-disc pl-4">
                        <li>Learning Style Adaptation</li>
                        <li>Pace Adjustment</li>
                        <li>Interest-Based Content</li>
                        <li>Career Goal Alignment</li>
                      </ul>
                    </div>
                  </div>
                </div>
              </div>
            )}
            
            {showAdvancedFeatures && activeSection === 'knowledge' && (
              <div className="bg-white rounded-lg shadow-md p-4">
                <h2 className="text-lg font-semibold mb-4 text-purple-700">Knowledge Base</h2>
                
                <div className="mb-4">
                  <div className="flex justify-between items-center mb-3">
                    <h3 className="font-medium">Content Distribution</h3>
                    <div className="text-xs text-gray-500">12,458 total resources</div>
                  </div>
                  
                  <div className="bg-gray-100 rounded-lg p-3">
                    <div className="mb-2">
                      <div className="flex justify-between text-xs mb-1">
                        <span>Programming</span>
                        <span>42%</span>
                      </div>
                      <div className="h-2 bg-gray-200 rounded-full overflow-hidden">
                        <div className="h-full bg-purple-500 rounded-full" style={{width: '42%'}}></div>
                      </div>
                    </div>
                    
                    <div className="mb-2">
                      <div className="flex justify-between text-xs mb-1">
                        <span>Data Science</span>
                        <span>28%</span>
                      </div>
                      <div className="h-2 bg-gray-200 rounded-full overflow-hidden">
                        <div className="h-full bg-blue-500 rounded-full" style={{width: '28%'}}></div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            )}
          </div>
        )}
        
        {activeTab === 'generation' && (
          <div className="max-w-4xl mx-auto">
            <div className="bg-white rounded-lg shadow-md p-4 mb-4">
              <h2 className="text-lg font-semibold mb-4 text-purple-700">Content Generation</h2>
              
              {!contentType ? (
                <>
                  <p className="text-sm text-gray-600 mb-4">
                    Select the type of content you want to generate:
                  </p>
                  
                  <div className="grid grid-cols-2 gap-4">
                    <div 
                      className="border rounded-lg p-4 cursor-pointer hover:border-purple-400 hover:bg-purple-50 transition-colors"
                      onClick={() => handleContentTypeSelect('lecture')}
                    >
                      <div className="flex items-center mb-2">
                        <BookOpen className="h-5 w-5 text-purple-600 mr-2" />
                        <h3 className="font-medium">Lecture Notes</h3>
                      </div>
                      <p className="text-sm text-gray-600">
                        Comprehensive educational materials for teaching concepts
                      </p>
                    </div>
                    
                    <div 
                      className="border rounded-lg p-4 cursor-pointer hover:border-purple-400 hover:bg-purple-50 transition-colors"
                      onClick={() => handleContentTypeSelect('quiz')}
                    >
                      <div className="flex items-center mb-2">
                        <FileText className="h-5 w-5 text-purple-600 mr-2" />
                        <h3 className="font-medium">Quizzes</h3>
                      </div>
                      <p className="text-sm text-gray-600">
                        Assessment questions to test understanding of concepts
                      </p>
                    </div>
                    
                    <div 
                      className="border rounded-lg p-4 cursor-pointer hover:border-purple-400 hover:bg-purple-50 transition-colors"
                      onClick={() => handleContentTypeSelect('exercise')}
                    >
                      <div className="flex items-center mb-2">
                        <Code className="h-5 w-5 text-purple-600 mr-2" />
                        <h3 className="font-medium">Programming Exercises</h3>
                      </div>
                      <p className="text-sm text-gray-600">
                        Hands-on coding challenges to apply learned concepts
                      </p>
                    </div>
                    
                    <div 
                      className="border rounded-lg p-4 cursor-pointer hover:border-purple-400 hover:bg-purple-50 transition-colors"
                      onClick={() => handleContentTypeSelect('capstone')}
                    >
                      <div className="flex items-center mb-2">
                        <Award className="h-5 w-5 text-purple-600 mr-2" />
                        <h3 className="font-medium">Capstone Projects</h3>
                      </div>
                      <p className="text-sm text-gray-600">
                        Comprehensive projects to demonstrate mastery of skills
                      </p>
                    </div>
                  </div>
                </>
              ) : !modificationMode ? (
                <>
                  <div className="flex items-center mb-4">
                    <button 
                      className="text-sm text-purple-600 flex items-center" 
                      onClick={() => setContentType(null)}
                    >
                      <ArrowRight className="h-4 w-4 mr-1 rotate-180" />
                      Back to content selection
                    </button>
                  </div>
                  
                  <div className="border rounded-lg p-4 mb-4">
                    <div className="flex items-center mb-3">
                      {contentType === 'lecture' && <BookOpen className="h-5 w-5 text-purple-600 mr-2" />}
                      {contentType === 'quiz' && <FileText className="h-5 w-5 text-purple-600 mr-2" />}
                      {contentType === 'exercise' && <Code className="h-5 w-5 text-purple-600 mr-2" />}
                      {contentType === 'capstone' && <Award className="h-5 w-5 text-purple-600 mr-2" />}
                      <h3 className="font-medium">
                        {contentType === 'lecture' && 'Lecture Notes'}
                        {contentType === 'quiz' && 'Quiz Generation'}
                        {contentType === 'exercise' && 'Programming Exercises'}
                        {contentType === 'capstone' && 'Capstone Project'}
                      </h3>
                    </div>
                    
                    <div className="bg-gray-50 border rounded-lg p-3 mb-3">
                      <div className="flex flex-col">
                        <div className="flex space-x-2 mb-2">
                          <div className="bg-gray-100 rounded px-2 py-1 text-xs">Thinking, Processing</div>
                        </div>
                        <div className="flex space-x-2 mb-2">
                          <div className="bg-gray-100 rounded px-2 py-1 text-xs">Result Preview</div>
                        </div>
                      </div>
                    </div>
                    
                    <div className="border-t pt-3">
                      <h4 className="text-sm font-medium mb-2">Select Modification Type:</h4>
                      <div className="grid grid-cols-3 gap-3">
                        <div 
                          className="border rounded-md p-2 flex flex-col items-center cursor-pointer hover:border-purple-400 hover:bg-purple-50 transition-colors"
                          onClick={() => handleModificationSelect('manual')}
                        >
                          <Edit className="h-5 w-5 text-purple-600 mb-1" />
                          <span className="text-sm">Edit â€“ Manual</span>
                        </div>
                        <div 
                          className="border rounded-md p-2 flex flex-col items-center cursor-pointer hover:border-purple-400 hover:bg-purple-50 transition-colors"
                          onClick={() => handleModificationSelect('partial')}
                        >
                          <CheckSquare className="h-5 w-5 text-purple-600 mb-1" />
                          <span className="text-sm">Partial AI Editing</span>
                        </div>
                        <div 
                          className="border rounded-md p-2 flex flex-col items-center cursor-pointer hover:border-purple-400 hover:bg-purple-50 transition-colors"
                          onClick={() => handleModificationSelect('full')}
                        >
                          <Cpu className="h-5 w-5 text-purple-600 mb-1" />
                          <span className="text-sm">Full AI Editing</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </>
              ) : (
                <>
                  <div className="flex items-center mb-4">
                    <button 
                      className="text-sm text-purple-600 flex items-center" 
                      onClick={() => setModificationMode(null)}
                    >
                      <ArrowRight className="h-4 w-4 mr-1 rotate-180" />
                      Back to modification selection
                    </button>
                  </div>
                  
                  <div className="border rounded-lg p-4 mb-4">
                    <div className="flex justify-between items-center mb-3">
                      <div className="flex items-center">
                        {contentType === 'lecture' && <BookOpen className="h-5 w-5 text-purple-600 mr-2" />}
                        {contentType === 'quiz' && <FileText className="h-5 w-5 text-purple-600 mr-2" />}
                        {contentType === 'exercise' && <Code className="h-5 w-5 text-purple-600 mr-2" />}
                        {contentType === 'capstone' && <Award className="h-5 w-5 text-purple-600 mr-2" />}
                        <h3 className="font-medium">
                          {contentType === 'lecture' && 'Lecture Notes'}
                          {contentType === 'quiz' && 'Quiz Generation'}
                          {contentType === 'exercise' && 'Programming Exercises'}
                          {contentType === 'capstone' && 'Capstone Project'}
                        </h3>
                      </div>
                      <div className="flex items-center">
                        <span className="text-xs bg-purple-100 text-purple-800 rounded-full px-2 py-1">
                          {modificationMode === 'manual' && 'Manual Edit'}
                          {modificationMode === 'partial' && 'Partial AI Edit'}
                          {modificationMode === 'full' && 'Full AI Edit'}
                        </span>
                      </div>
                    </div>
                    
                    <div className="bg-white border rounded-lg">
                      {contentType === 'lecture' && (
                        <div className="p-3">
                          <h4 className="font-medium mb-2">Introduction to Python Programming</h4>
                          <p className="text-sm text-gray-600 mb-2">
                            Python is a high-level, interpreted programming language known for its readability and simplicity.
                          </p>
                          <h5 className="font-medium text-sm mt-3 mb-1">Key Features:</h5>
                          <ul className="text-sm text-gray-600 list-disc pl-5 mb-2">
                            <li>Easy to learn and use</li>
                            <li>Extensive standard library</li>
                            <li>Dynamic typing</li>
                            <li>Strong community support</li>
                          </ul>
                        </div>
                      )}
                      
                      {contentType === 'quiz' && (
                        <div className="p-3">
                          <h4 className="font-medium mb-2">Python Basics Quiz</h4>
                          <div className="border-b pb-2 mb-3">
                            <p className="text-sm font-medium mb-1">1. Which of the following is a correct variable declaration in Python?</p>
                            <div className="text-sm text-gray-600">
                              <div className="flex items-center mb-1">
                                <input type="radio" id="q1a" name="q1" className="mr-2" />
                                <label htmlFor="q1a">var x = 10;</label>
                              </div>
                              <div className="flex items-center mb-1">
                                <input type="radio" id="q1b" name="q1" className="mr-2" />
                                <label htmlFor="q1b">x = 10</label>
                              </div>
                              <div className="flex items-center mb-1">
                                <input type="radio" id="q1c" name="q1" className="mr-2" />
                                <label htmlFor="q1c">int x = 10;</label>
                              </div>
                            </div>
                          </div>
                        </div>
                      )}
                      
                      {contentType === 'exercise' && (
                        <div className="p-3">
                          <h4 className="font-medium mb-2">Python List Manipulation Exercise</h4>
                          <div className="bg-gray-50 p-2 rounded text-sm font-mono mb-3">
                            <p># Exercise: Create a function that takes a list of numbers</p>
                            <p># and returns a new list containing only the even numbers</p>
                            <p><br /></p>
                            <p>def filter_even_numbers(numbers):</p>
                            <p>&nbsp;&nbsp;&nbsp;&nbsp;# Your code here</p>
                            <p>&nbsp;&nbsp;&nbsp;&nbsp;pass</p>
                          </div>
                        </div>
                      )}
                      
                      {contentType === 'capstone' && (
                        <div className="p-3">
                          <h4 className="font-medium mb-2">Data Analysis Capstone Project</h4>
                          <p className="text-sm text-gray-600 mb-3">
                            In this capstone project, you will apply your Python programming skills 
                            to analyze a real-world dataset and extract meaningful insights.
                          </p>
                          <h5 className="font-medium text-sm mb-1">Project Requirements:</h5>
                          <ul className="text-sm text-gray-600 list-disc pl-5 mb-3">
                            <li>Load and clean the provided dataset</li>
                            <li>Perform exploratory data analysis</li>
                            <li>Create visualizations to illustrate key findings</li>
                            <li>Build a predictive model</li>
                            <li>Present your analysis in a Jupyter notebook</li>
                          </ul>
                        </div>
                      )}
                    </div>
                    
                    {/* AI Contextual Suggestions */}
                    {(modificationMode === 'partial' || modificationMode === 'full') && (
                      <div className="mt-3 border-t pt-3">
                        <h4 className="text-sm font-medium mb-2 flex items-center">
                          <Brain className="h-4 w-4 mr-1 text-purple-600" />
                          AI Suggestions
                        </h4>
                        <div className="space-y-2">
                          <div className="border rounded p-2 bg-purple-50 text-xs">
                            <div className="font-medium text-purple-800 mb-1">Content Enhancement</div>
                            <p className="text-gray-700">
                              {contentType === 'lecture' && "Add examples of Python syntax with real-world applications to improve retention."}
                              {contentType === 'quiz' && "Include questions on list comprehensions to test higher-order thinking."}
                              {contentType === 'exercise' && "Add a difficulty progression with hints for struggling learners."}
                              {contentType === 'capstone' && "Include a real dataset from the financial sector to increase job relevance."}
                            </p>
                          </div>
                        </div>
                      </div>
                    )}
                    
                    <div className="flex justify-end mt-4">
                      <button className="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-md">
                        {modificationMode === 'manual' ? 'Save Changes' : 'Apply AI Edits'}
                      </button>
                    </div>
                  </div>
                </>
              )}
            </div>
          </div>
        )}
        
        {activeTab === 'analytics' && (
          <div className="max-w-4xl mx-auto">
            <div className="bg-white rounded-lg shadow-md p-4 mb-4">
              <h2 className="text-lg font-semibold mb-4 text-purple-700">Analytics Dashboard</h2>
              
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
                <div className="border rounded-lg p-3">
                  <div className="flex items-center justify-between mb-2">
                    <h3 className="text-sm font-medium">Content Generation</h3>
                    <span className="text-xs text-green-600">+12% â†‘</span>
                  </div>
                  <div className="text-2xl font-bold mb-1">1,245</div>
                  <div className="text-xs text-gray-500">Assets generated this month</div>
                </div>
                
                <div className="border rounded-lg p-3">
                  <div className="flex items-center justify-between mb-2">
                    <h3 className="text-sm font-medium">User Engagement</h3>
                    <span className="text-xs text-green-600">+8% â†‘</span>
                  </div>
                  <div className="text-2xl font-bold mb-1">85%</div>
                  <div className="text-xs text-gray-500">Average completion rate</div>
                </div>
                
                <div className="border rounded-lg p-3">
                  <div className="flex items-center justify-between mb-2">
                    <h3 className="text-sm font-medium">Knowledge Base</h3>
                    <span className="text-xs text-green-600">+24% â†‘</span>
                  </div>
                  <div className="text-2xl font-bold mb-1">12,458</div>
                  <div className="text-xs text-gray-500">Indexed educational resources</div>
                </div>
              </div>
            </div>
          </div>
        )}
        
        {activeTab === 'admin' && (
          <div className="max-w-4xl mx-auto">
            <div className="bg-white rounded-lg shadow-md p-4 mb-4">
              <h2 className="text-lg font-semibold mb-4 text-purple-700">Admin Dashboard</h2>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="border rounded-lg p-3">
                  <h3 className="text-sm font-medium mb-3 flex items-center">
                    <Database className="h-4 w-4 mr-1 text-purple-600" />
                    Knowledge Base Management
                  </h3>
                  
                  <div className="space-y-3">
                    <div className="flex justify-between items-center border-b pb-2">
                      <div className="text-xs font-medium">Last Index Update</div>
                      <div className="text-xs">March 21, 2025 (1 day ago)</div>
                    </div>
                    
                    <div>
                      <div className="text-xs font-medium mb-1">Upcoming Scheduled Tasks</div>
                      <ul className="text-xs space-y-1">
                        <li className="flex items-center">
                          <span className="w-3 h-3 rounded-full bg-green-500 mr-2"></span>
                          Content Refresh: March 23, 2025
                        </li>
                      </ul>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}
      </main>
    </div>
  );
}

export default EliceCreatorAI;